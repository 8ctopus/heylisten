# Upstream to abstract backend connection(s) for php
upstream php {
    server unix:/tmp/php-cgi.socket;
    server 127.0.0.1:9000;
}

# https://api.heylisten.app
server {
    server_name api.heylisten.app;

    # root dir
    root /var/www/site/public;

    # index files
    index index.php index.html index.htm;

    # ssl config
    listen 443 ssl http2;
    ssl_certificate /etc/ssl/nginx/heylisten.app.pem;
    ssl_certificate_key /etc/ssl/nginx/heylisten.app.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # files upload
    client_max_body_size 2m;

    # ?
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # send php files to php-fpm
    location ~ \.php$ {
        #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        include fastcgi_params;
        fastcgi_intercept_errors on;
        fastcgi_pass php;

        #The following parameter can be also included in fastcgi_params file
        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}

# http://api.heylisten.app
# redirect all requests to https://api.heylisten.app
server {
    if ($host = api.heylisten.app) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name api.heylisten.app;
    listen 80;

    return 404; # managed by Certbot
}

# ?
map $sent_http_content_type $expires {
    "text/html"                 epoch;
    "text/html; charset=utf-8"  epoch;
    default                     off;
}

# https://heylisten.app
server {
    server_name heylisten.app;

    # ssl config
    listen 443 ssl http2;
    ssl_certificate /etc/ssl/nginx/heylisten.app.pem;
    ssl_certificate_key /etc/ssl/nginx/heylisten.app.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    #location / {
    #    proxy_pass http://localhost:4000;
    #    proxy_http_version 1.1;
    #    proxy_set_header Upgrade $http_upgrade;
    #    proxy_set_header Connection 'upgrade';
    #    proxy_set_header Host $host;
    #    proxy_cache_bypass $http_upgrade;
    #}

    # redirect all requests to node.js proxy
    location / {
        expires $expires;

        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout                  1m;
        proxy_connect_timeout               1m;

        # set the address of the Node.js instance here
        proxy_pass                          http://localhost:4000;
    }
}

# http://heylisten.app
# redirect all requests to https://heylisten.app
server {
    if ($host = heylisten.app) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name heylisten.app;
    listen 80;

    return 404; # managed by Certbot
}

# https://www.heylisten.app
# redirect all requests to https://heylisten.app
server {
    server_name www.heylisten.app;

    # ssl config
    listen 443 ssl http2;
    ssl_certificate /etc/ssl/nginx/heylisten.app.pem;
    ssl_certificate_key /etc/ssl/nginx/heylisten.app.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    if ($host = www.heylisten.app) {
        return 301 https://heylisten.app$request_uri;
    } # managed by Certbot

    return 404; # managed by Certbot
}

# http://www.heylisten.app
# redirect all requests to https://heylisten.app
server {
    if ($host = www.heylisten.app) {
        return 301 https://heylisten.app$request_uri;
    } # managed by Certbot

    server_name www.heylisten.app;
    listen 80;

    return 404; # managed by Certbot
}
